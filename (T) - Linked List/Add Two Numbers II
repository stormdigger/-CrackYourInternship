class Solution {
public:
    ListNode *rev(ListNode *head)
    {
        ListNode *prev=NULL;
        ListNode *curr=head;
        ListNode *next;
        while(curr)
        {
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1=rev(l1);
        l2=rev(l2);
        if(l1==NULL)
        {
            return l2;
        }
        if(l2==NULL)
        {
            return l1;
        }
        ListNode *root=new ListNode(-1);
        ListNode *dummy=root;
        int carry=0;
        while(l1!=NULL || l2!=NULL || carry)
        {
            int sum=0;
            if(l1!=NULL)
            {
                sum+=l1->val;
                l1=l1->next;
            }
            if(l2!=NULL)
            {
                sum+=l2->val;
                l2=l2->next;
            }
            sum+=carry;
            carry=sum/10;
            ListNode *newnode=new ListNode(sum%10);
            root->next=newnode;
            root=root->next;
        }
        return rev(dummy->next);

    }
};
