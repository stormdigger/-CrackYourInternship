class Solution {
public:
    int solve(vector<vector<int>>& ans, int i, int j) {
        int m = ans.size();
        int n = ans[0].size();
        int cnt = 0;
        if (j > 0 && ans[i][j-1] == 1) cnt++;
        if (j < n-1 && ans[i][j+1] == 1) cnt++;
        if (i > 0 && ans[i-1][j] == 1) cnt++;
        if (i < m-1 && ans[i+1][j] == 1) cnt++;
        if (i > 0 && j > 0 && ans[i-1][j-1] == 1) cnt++;
        if (i > 0 && j < n-1 && ans[i-1][j+1] == 1) cnt++;
        if (i < m-1 && j > 0 && ans[i+1][j-1] == 1) cnt++;
        if (i < m-1 && j < n-1 && ans[i+1][j+1] == 1) cnt++;
        cout << cnt << " ";
        return cnt;
    }

    void gameOfLife(vector<vector<int>>& board) {
        vector<vector<int>>ans = board;
        for (int i = 0; i < ans.size(); i++) {
            for (int j = 0; j < ans[0].size(); j++) {
                int live = solve(ans, i, j);
                if (ans[i][j] == 1 && live < 2) {
                    board[i][j] = 0;
                } else if (ans[i][j] == 1 && (live == 2 || live == 3)) {
                    board[i][j] = 1;
                } else if (ans[i][j] == 1 && live > 3) {
                    board[i][j] = 0;
                } else if (ans[i][j] == 0 && live == 3) {
                    board[i][j] = 1;
                }
            }
        }
    }
};
