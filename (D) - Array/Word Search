class Solution {
public:
    bool solve(int k, int i, int j, vector<vector<char>>& board, string &word, vector<vector<bool>>& vis, int m, int n)
    {
        if(k>=word.size())
        {
            return true;
        }
        vis[i][j]=true;
        if(j-1>=0 && board[i][j-1]==word[k] && vis[i][j-1]==false)
        {
            if(solve(k+1,i,j-1,board,word,vis,m,n)) return true;
        }
        if(j+1<n && board[i][j+1]==word[k] && vis[i][j+1]==false)
        {
            if(solve(k+1,i,j+1,board,word,vis,m,n)) return true;
        }
        if(i-1>=0 && board[i-1][j]==word[k] && vis[i-1][j]==false)
        {
            if(solve(k+1,i-1,j,board,word,vis,m,n)) return true;
        }
        if(i+1<m && board[i+1][j]==word[k] && vis[i+1][j]==false)
        {
            if(solve(k+1,i+1,j,board,word,vis,m,n)) return true;
        }
        vis[i][j]=false;
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size();
        int n=board[0].size();
        vector<vector<bool>>vis(m,vector<bool>(n,false));
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(board[i][j]==word[0])
                {
                    if(solve(1,i,j,board,word,vis,m,n)) return true;
                }
            }
        }
        return false;

    }
};
